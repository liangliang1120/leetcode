class Solution:
    def countSubIslands(self, grid1: List[List[int]], grid2: List[List[int]]) -> int:
        dirs = [[-1, 0],[1, 0],[0,-1],[0,1]]
        def dfs(grid, i, j):
            if grid[i][j] == 0:
                # 已经是海水了
                return
            
            grid[i][j] = 0
            m = len(grid)
            n = len(grid[0])
            
            for d in dirs:
                next_i = i + d[0]
                next_j = j + d[1]
                if 0 <= next_i < m and 0 <= next_j < n and grid[next_i][next_j] == 1:
                    # print(i,j,next_i,next_j)
                    dfs(grid, next_i, next_j)
        
        res = 0
        m = len(grid1)
        n = len(grid1[0])
            
        for i in range(m):
            for j in range(n):
                if grid1[i][j] == 0 and grid2[i][j] == 1:
                    dfs(grid2, i ,j)
                    
        for i in range(m):
            for j in range(n):
                if grid2[i][j] == 1:
                    res += 1
                    dfs(grid2, i ,j)

        return res
