# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def sortedArrayToBST(self, nums: List[int]) -> TreeNode:
        if len(nums) == 0:
            return None
        if len(nums) == 1:
            return TreeNode(nums[0])
        
        n = len(nums)
        return self.buildTress(nums, 0, n - 1)

    def buildTress(self, nums, left, right)  :  
        if left > right:
            return None
        mid = (left + right) //2
        root = TreeNode(nums[mid])
        root.left = self.buildTress(nums, left, mid - 1)
        root.right = self.buildTress(nums, mid + 1, right)
        return root
