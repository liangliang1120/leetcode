class Solution:
    def __init__(self):
        self.temp = []
        
    def sortArray(self, nums: List[int]) -> List[int]:
        self.temp = [None] * len(nums)
        self.mergeSort(nums, 0, len(nums) - 1)
        return nums

    def mergeSort(self, nums, start, end):
        if start >= end:
            return
        mid = (start + end) // 2
        self.mergeSort(nums, start, mid)
        self.mergeSort(nums, mid + 1, end)
        self.merge(nums, start, mid, end)

    def merge(self, nums, start, mid, end):
        left = start
        right = mid + 1
        index = start

        while left <= mid and right <= end:
            if nums[left] < nums[right]:
                self.temp[index] = nums[left]
                left = left + 1
                index = index + 1
            else:
                self.temp[index] = nums[right]
                right = right + 1 
                index = index + 1
            
        while left <= mid:
            self.temp[index] = nums[left]
            left = left + 1
            index = index + 1

        while right <= end:
            self.temp[index] = nums[right]
            right = right + 1 
            index = index + 1

        for index in range(start, end + 1):
            nums[index] = self.temp[index]
