class Solution:
    res = 0
    def __init__(self):
        self.res = 1
        self.temp = []
        
    def reversePairs(self, nums) :
        if len(nums) == 0:
            return 0
        self.temp = [None] * len(nums)
        return self.reversePairsRecursive(nums, 0, len(nums) - 1)

    def reversePairsRecursive(self, nums, start, end):
        if start >= end:
            return 0
        mid = (start + end) // 2
        n1 = self.reversePairsRecursive(nums, start, mid)
        n2 = self.reversePairsRecursive(nums, mid + 1, end)
        ret = n1 + n2
        
        i = start
        j = mid + 1
        while i <= mid:
            while j <= end and nums[i] > 2 * nums[j]:
                j += 1
            ret += j - mid - 1
            i += 1
        
        left = start
        right = mid + 1
        index = start
        while left <= mid and right <= end:
            if nums[left] < nums[right]:
                # print(self.temp,index, nums,left)
                self.temp[index] = nums[left]
                left = left + 1
                index = index + 1
            else:
                self.temp[index] = nums[right]
                right = right + 1 
                index = index + 1
            
        while left <= mid:
            self.temp[index] = nums[left]
            left = left + 1
            index = index + 1

        while right <= end:
            self.temp[index] = nums[right]
            right = right + 1 
            index = index + 1

        for index in range(start, end + 1):
            nums[index] = self.temp[index]

        return ret

