# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def minDepth(self, root: Optional[TreeNode]) -> int:
        if root is None:
            return 0
        left = self.minDepth(root.left)
        right = self.minDepth(root.right)
        if root.left is None or root.right is None:
            return left + right + 1
        else:
            return min(left, right) + 1
        # //1.如果左孩子和右孩子有为空的情况，直接返回m1+m2+1
        # //2.如果都不为空，返回较小深度+1
        # return root.left == null || root.right == null ? m1 + m2 + 1 : Math.min(m1,m2) + 1;
