class Solution:
    def solveNQueens(self, n: int) -> List[List[str]]:
        result = []
        # board = [["."] * n] * n //错误，四个sublist指向同一地址，一个修改了其他也会修改
        board = []
        for i in range(n):
            board.append(['.'] * n)

        
        def isValid(row, col):
            # 检查列
            for i in range(n):
                if board[i][col] == "Q":
                    return False
            # 右上方
            i = row - 1
            j = col + 1
            while i >= 0 and j < n:
                if board[i][j] == "Q":
                    return False
                i -= 1
                j += 1
            # 左上方
            i = row - 1
            j = col - 1
            while i >= 0 and j >= 0:
                if board[i][j] == "Q":
                    return False
                i -= 1
                j -= 1
                
            return True
        
        def backtrack(row):
            if row == n:
                result.append(["".join(b) for b in board])
                return
            for col in range(n):
                if not isValid(row, col):
                    continue
                board[row][col] = "Q"
                backtrack(row + 1)
                board[row][col] = "."
        backtrack(0)
        return result
        
